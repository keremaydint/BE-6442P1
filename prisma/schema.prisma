// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id  Int @id @default(autoincrement())
  name String 
  created_at DateTime @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?

  posts Post[]

  @@map("categories")
}

model Post {
  id Int @id @default(autoincrement())
  category_id Int
  title String
  content String
  created_at DateTime @default(now())
  published_at DateTime?
  updated_at DateTime? @updatedAt
  deleted_at DateTime?

  category Category  @relation(fields: [category_id], references: [id])
  comment Comment[]
  post_tags PostTags[]

  @@map("posts")
}

model Comment {
  id Int @id @default(autoincrement())
  post_id Int
  content String
  commenter_name String
  created_at DateTime @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?

  post Post @relation(fields: [post_id], references: [id])

  @@map("comments")
}

model Tag {
  id Int @id @default(autoincrement())
  name String

  post_tags PostTags[]

  @@map("tags")
}

model PostTags {
  post_id Int
  tag_id Int

  post Post @relation(fields: [post_id], references: [id])
  tag Tag @relation(fields: [tag_id], references: [id])

  @@id([post_id, tag_id])
  @@map("post_tags")
}


model User {
  id  Int @id @default(autoincrement())
  name String
  username String @unique
  role Role
  hashed_password String
  created_at DateTime @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?

    refreshTokens   RefreshToken[]

  @@map("users")
}

model RefreshToken {
  id          Int      @id @default(autoincrement())
  user_id     Int
  created_at  DateTime @default(now())
  updated_at  DateTime? @updatedAt
  expires_at  DateTime
  revoked_at  DateTime?

  user        User     @relation(fields: [user_id], references: [id])

  @@map("refresh_tokens")
}

enum Role {
  member
  moderator
  admin
}
